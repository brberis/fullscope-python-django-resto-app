# Generated by Django 4.1.2 on 2022-11-26 06:06

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, verbose_name='Name')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
                ('order', models.PositiveSmallIntegerField(default=99, null=True, verbose_name='Order')),
            ],
            options={
                'verbose_name': 'Category',
                'verbose_name_plural': 'Categories',
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='ItemManager',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Name')),
            ],
        ),
        migrations.CreateModel(
            name='Item',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=250, verbose_name='Name')),
                ('item_description', models.TextField(blank=True, default='', verbose_name='Item Description')),
                ('price', models.DecimalField(decimal_places=0, default=0, max_digits=12, verbose_name='Price')),
                ('active', models.BooleanField(db_index=True, default=False, verbose_name='Active')),
                ('is_featured', models.BooleanField(db_index=True, default=False, verbose_name='Featured')),
                ('featured_image', models.CharField(blank=True, max_length=150, null=True, verbose_name='Featured image')),
                ('order', models.PositiveSmallIntegerField(default=99, null=True, verbose_name='Order')),
                ('categories', models.ManyToManyField(blank=True, to='inventory.category', verbose_name='Categories')),
            ],
            options={
                'verbose_name': 'Product',
                'verbose_name_plural': 'Products',
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='Inventory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('stock_level', models.IntegerField(default=0, help_text='Balance', verbose_name='Stock Level')),
                ('available_status', models.BooleanField(default=True, verbose_name='Available Status')),
                ('availability_date', models.DateTimeField(blank=True, help_text='The date on which the inventory is expected to be available.', null=True, verbose_name='Availability Date')),
                ('backorder_level', models.IntegerField(default=1, help_text='The number of items that may be backordered.', verbose_name='Stock Level')),
                ('preorder_level', models.IntegerField(default=1, help_text='The number of items that may be preorderable.', verbose_name='Stock Level')),
                ('stock_thresh', models.IntegerField(default=0, help_text='If the stock_level value dips below this value, a ThresholdReached event is sent.', verbose_name='Stock Thresh')),
                ('backorder_thresh', models.IntegerField(default=0, help_text='If the backorder_level value dips below this value, a ThresholdReached event is sent.', verbose_name='Backorder Thresh')),
                ('preorder_thresh', models.IntegerField(default=0, help_text='If the preorder_level value dips below this value, a ThresholdReached event is sent.', verbose_name='Preorder Thresh')),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='inventory', to='inventory.item', verbose_name='Item')),
                ('location', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='inventory', to='inventory.location', verbose_name='Location')),
            ],
        ),
    ]
